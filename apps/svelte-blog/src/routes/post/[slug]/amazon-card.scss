// 変数定義
$breakpoint-md: 768px;
$color-border: #e5e7eb;
$color-text: #1f2937;
$color-link: #2563eb;
$color-cta: #fbbf24;
$color-cta-hover: #f59e0b;
$color-bg: white;

// ミックスイン
@mixin transition($properties...) {
  $transition: ();

  @each $property in $properties {
    $transition: append($transition, #{$property} 200ms cubic-bezier(0.4, 0, 0.2, 1), comma);
  }

  transition: $transition;
}

// メインスタイル
.amazon-card {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
  padding: 1rem;
  border: 1px solid $color-border;
  border-radius: 0.5rem;
  box-shadow:
    0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
  margin: 1.5rem 0;

  // タブレット以上のスタイル
  @media (min-width: $breakpoint-md) {
    grid-template-columns: repeat(10, minmax(0, 1fr));
  }

  &__image {
    // スマホ画面では1列全体を使用し中央配置
    grid-column: span 1;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.5rem;
    background-color: $color-bg;

    // タブレット以上では3列分を使用
    @media (min-width: $breakpoint-md) {
      grid-column: span 3;
    }

    &__img {
      max-width: 100%;
      height: auto;
      max-height: 12rem;
      object-fit: contain;
    }
  }

  &__content {
    // スマホ画面では1列全体を使用
    grid-column: span 1;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    gap: 1rem;

    // タブレット以上では7列分を使用
    @media (min-width: $breakpoint-md) {
      grid-column: span 7;
    }
  }

  &__title {
    font: 500 1.125rem/1.75rem sans-serif;
    color: $color-text;
    margin-bottom: 0.5rem;
    text-decoration: none;

    &:hover {
      color: $color-link;
      text-decoration: underline;
    }
  }

  &__cta {
    display: inline-block;
    padding: 0.5rem 1rem;
    background-color: $color-cta;
    color: $color-text;
    font: 500 0.875rem/1.25rem sans-serif;
    border-radius: 0.375rem;
    text-align: center;
    text-decoration: none;
    width: 10rem;
    @include transition(background-color, color, transform);

    &:hover {
      background-color: $color-cta-hover;
      transform: translateY(-1px);
    }
  }
}
